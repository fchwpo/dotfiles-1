# Path to your oh-my-zsh installation.
export ZSH=/home/gcg/.oh-my-zsh

ZSH_THEME="agnoster"
HIST_STAMPS="yyyy-mm-dd"
plugins=(jsontools sudo cloudapp jump)

export PATH="/home/gcg/.gem/ruby/2.3.0/bin:/opt/android-sdk-linux/tools:/opt/android-sdk-linux/platform-tools:/usr/local/sbin:/usr/local/bin:/usr/bin:/usr/lib/jvm/default/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl"
export PATH="$PATH:./node_modules/.bin:../node_modules/.bin:../../node_modules/.bin:../../../node_modules/.bin:../../../../node_modules/.bin"

# this slows down startup because nodejs
# export PATH="$PATH:$(yarn global bin 2>/dev/null)"
# so use this instead
export PATH="$PATH:$HOME/.config/yarn/global/node_modules/.bin"

# export MANPATH="/usr/local/man:$MANPATH"

source $ZSH/oh-my-zsh.sh

# You may need to manually set your language environment
# export LANG=en_US.UTF-8
#
alias vincenza='ssh -o PubKeyAuthentication=no -p 2222 vincenza@maisonvincenza.com.br'
export VISUAL=nvim
export EDITOR="$VISUAL"
alias webcam='guvcview'

# Git
alias g='git'
alias ga='git add'
alias gp='git push'
alias gpf='git push --force-with-lease'
alias gcm='git commit -m'
alias gcam='git commit -a -m'
alias gst='git status'
alias griom='git rebase -i origin/master'
alias gd='git diff --minimal'
alias gdc='git diff --cached'
alias grm='git co master&&g rcb'
alias pr='hub pull-request'
alias n='nvim'
alias nn='f -e nvim'
alias nd='node -r ~/dotfiles/node'
na () { n "+/\c$*" `ag --ignore yarn.lock -l "$*"` }
nag () { n "+/\c$*" `ag --ignore yarn.lock -l "$*"` }
nf () { n `find -name "$*" -not -path "./node_modules/*"` }
nlint() { n `eslint --cache -f ~/code/_archive/eslint-formatter-list .` }
alias ff='ag -g'
alias w='watch -n 0.5 --color'
alias v='viewnior'
alias c='xclip -selection clipboard'
alias wr='nmcli r w off&&nmcli r w on'
alias ww='watch nmcli d w'
alias y='yarn'
alias ya='yarn add'
alias t='npm test'
alias tw='npm run test-watch'
alias zsh='nvim ~/.zshrc&&reload'
alias aa='ag --ignore yarn.lock'
re() {
  rec -t wav - | lame -V 9 -h - >/tmp/record.mp3
  cloudapp /tmp/record.mp3
}
mkd() { mkdir -p $1 && cd $1 }
tmp() {
  cd /tmp
  mkd $RANDOM
  npm init --yes
}
cc() { readlink -f $1 | c }
alias ng='killall ngrok 2>/dev/null;ngrok http -subdomain=invisible-dev-2 3000 >/dev/null &!'
alias lint='nvim `eslint --cache -f ~/code/_archive/eslint-formatter-list --ignore-path .gitignore .`'
alias performance='for i in `ls -d /sys/devices/system/cpu/cpu*|grep -v cpufreq|grep -v cpuidle`; do echo performance | sudo tee --append $i/cpufreq/scaling_governor >/dev/null; done'
alias powersave='for i in `ls -d /sys/devices/system/cpu/cpu*|grep -v cpufreq|grep -v cpuidle`; do sudo echo powersave  | sudo tee --append $i/cpufreq/scaling_governor >/dev/null; done; xbacklight -set 7'
alias hibernate='echo disk | sudo tee /sys/power/state'
alias suspend='echo mem | sudo tee /sys/power/state'
alias wf='chromium --app="https://workflowy.com" --enable-apps --enable-extension-apps'

alias curlpost='curl -v -H "Content-Type: application/json" -d -'
gif() { ffmpeg -i $1 $1.gif }
gifhq() {
  palette="/tmp/palette.png"
  filters="fps=15,scale=420:-1:flags=lanczos"
  ffmpeg -v warning -i $1 -vf "$filters,palettegen" -y $palette
  ffmpeg -v warning -i $1 -i $palette -lavfi "$filters [x]; [x][1:v] paletteuse" -y $2
}
speedup() { ffmpeg -i $1 -filter_complex "[0:v]setpts=0.8*PTS[v]" -map "[v]" fast-$1 }
speedupx() { ffmpeg -i $1 -filter_complex "[0:v]setpts=$2*PTS[v]" -map "[v]" fast-$1 }
speedupa() { ffmpeg -i $1 -filter_complex "[0:v]setpts=0.8*PTS[v];[0:a]atempo=1.25[a]" -map "[v]" -map "[a]" fast-$1 }
reload() { source ~/.zshrc }

# heroku aliases
alias hl='heroku logs --remote production|less'
alias hls='heroku logs --remote staging|less'
alias hlt='heroku logs --tail --remote production'
alias hlts='heroku logs --tail --remote staging'

export TERM=screen-256color

eval $(dircolors ~/.dircolors)

eval $(keychain --eval --quiet id_rsa)

if [[ $TERM == xterm-termite ]]; then
  . /etc/profile.d/vte.sh
  __vte_osc7
fi

# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
[[ -f /home/gcg/.config/yarn/global/node_modules/tabtab/.completions/serverless.zsh ]] && . /home/gcg/.config/yarn/global/node_modules/tabtab/.completions/serverless.zsh
# tabtab source for sls package
# uninstall by removing these lines or running `tabtab uninstall sls`
[[ -f /home/gcg/.config/yarn/global/node_modules/tabtab/.completions/sls.zsh ]] && . /home/gcg/.config/yarn/global/node_modules/tabtab/.completions/sls.zsh

# vi mode
bindkey -v
bindkey '^P' up-history
bindkey '^N' down-history
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char
bindkey '^w' backward-kill-word
bindkey '^r' history-incremental-search-backward
function zle-line-init zle-keymap-select {
    VIM_PROMPT="%{$fg_bold[yellow]%} [% NORMAL]%  %{$reset_color%}"
    RPS1="${${KEYMAP/vicmd/$VIM_PROMPT}/(main|viins)/} $EPS1"
    zle reset-prompt
}
zle -N zle-line-init
zle -N zle-keymap-select
export KEYTIMEOUT=1


# ctrl+x for "... && exit"
function append-exit {
  BUFFER="$BUFFER && exit"
}
zle -N append-exit
bindkey "^S" append-exit


# alt+l for "ls"
function call-ls {
  zle accept-line
  echo ""
  ls
}
zle -N call-ls
bindkey "^[l" call-ls

# fasd ---------------
#
# commented out because nvim does not have viminfo file
# https://github.com/neovim/neovim/issues/999
# export _FASD_BACKENDS="current viminfo"
# export _FASD_VIMINFO=""
#
eval "$(fasd --init posix-alias zsh-hook zsh-ccomp zsh-ccomp-install zsh-wcomp zsh-wcomp-install)"
bindkey "^X^X" fasd-complete    # C-x C-a to do fasd-complete (files and directories)
bindkey "^X^F" fasd-complete-f  # C-x C-f to do fasd-complete-f (only files)
bindkey "^X^D" fasd-complete-d  # C-x C-d to do fasd-complete-d (only directories)

# nvm (node version manager)
source /usr/share/nvm/init-nvm.sh
